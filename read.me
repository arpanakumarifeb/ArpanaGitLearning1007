https://education.github.com/git-cheat-sheet-education.pdf
https://www.simplilearn.com/tutorials/git-tutorial/git-interview-questions#basic_git_interview_questions




================reverse String ===================


public class MyClass {
    public static void main(String args[]) {
      String name="my name is arpana kumari";
      String [] splitString= name.split(" ");
      String reverseString="";
      
      //for(int i=splitString.length-1;i>=0;i--){
    	for(int i=0;i<=splitString.length-1;i++){
           
          char ch[]= splitString[i].toCharArray();
          
          String rev="";
        for (char c : ch) {
            rev=c+rev;
            
        }
        reverseString=" "+ rev;
        System.out.print(reverseString);

      }
      

    }
}


============== get string count/ get duplicate value/ get unique val/=============

import java.util.*;
import java.util.Map;

public class HashMapClass {

	public static void main(String[] args) {
		
		String aa= "john lives India john lived India India lives India";
		String[] splittedVal=  aa.split("\\ ");
		
		HashMap<Integer, String> map= new HashMap <Integer, String>();
		HashMap<String, Integer> map1= new HashMap <String, Integer>();
		
		
		for(int i=0; i< splittedVal.length;i++) {
			map.put(i, splittedVal[i]); 
		}
		
		for(Map.Entry<Integer, String> e : map.entrySet()) {
			System.out.println("key:: " + e.getKey() + "  Value:: " + e.getValue());
			
			if(map1.containsKey(e.getValue())) {
				map1.put(e.getValue(), map1.get(e.getValue())+1);
			}else {
				map1.put(e.getValue(), 1);
			}
		}
		for(Map.Entry<String, Integer> e1 : map1.entrySet()) {
			System.out.println("key:: " + e1.getKey() + " Value:: " + e1.getValue());
		}
		
		/// convery hashmap to list and sort
		
		List<String> l= new ArrayList<String>();
		Set<String> s= new HashSet<String>();
		for(int i=0;i<map.size();i++) {
			l.add(map.get(i));
			s.add(map.get(i))
		}
		Collections.sort(l);
		System.out.print(l +" ");
		System.out.print(s +" ");
		
		
		
		
	}

}

=======================anagrams ===============================

public class anagrams {

	public static void main(String[] args) {


		String string1= "my name is";
		String string2= "my name pi";

		char ch1[]= string1.toLowerCase().toCharArray();
		char ch2[]= string2.toLowerCase().toCharArray();
		Arrays.sort(ch1);
		Arrays.sort(ch2);
		int counter=0;

		//method 1
		if(ch1.length==ch2.length) {
			for(int i=0;i<ch1.length;i++) {
				if(ch1[i] == ch2[i]) {

					counter++;
				}else {

					break;
				}
			}
			if(counter==ch1.length) {
				System.out.println("Strings are  anagrams");
			}else {
				System.out.println("Strings are not anagrams");
			}
		}else {
			System.out.println("Strings are not anagrams");
		}

		//method 2

		if(ch1.length==ch2.length) {
			boolean retval = Arrays.equals(ch1, ch2);
			if(retval) {
				System.out.println("Strings are  anagrams");
			}else {
				System.out.println("Strings are not anagrams");
			}

		}else {
			System.out.println("Strings are not anagrams");
		}

========================webdriver===============

System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir")+"\\chromedriver.exe");
  	  driver = new ChromeDriver();
  	  String url = "https://www.google.com";
  	  driver.get(url);
	  driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
  	  String expectedTitle = "Google";
  	  String actualTitle = driver.getTitle();
  	  Assert.assertEquals(actualTitle, expectedTitle);
  	  System.out.println("actualTitle:: " + actualTitle);
  	  count++;
  	  System.out.println("Current Invocation count "+count);




=======================git commands


…or create a new repository on the command line
echo "# ArpanaGitLearning1007" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:arpanakumarifeb/ArpanaGitLearning1007.git
git push -u origin main

…or push an existing repository from the command line
git remote add origin git@github.com:arpanakumarifeb/ArpanaGitLearning1007.git
git branch -M main
git push -u origin main


========

git remote set-url origin git@github.com:arpanakumarifeb/ArpanaGitLearning1007.git
$ git push -u origin master

==========================================================



